Index: a23_decompile.v
===================================================================
--- a23_decompile.v	(revision 89)
+++ a23_decompile.v	(working copy)
@@ -61,7 +61,7 @@
 );
 
 `include "a23_localparams.vh"
-        
+`include "a23_functions.vh"        
 `ifdef A23_DECOMPILE
 
 integer i;
@@ -203,8 +203,11 @@
                       itype == CORTRANS ? "CORTRANS" : 
                       itype == SWI      ? "SWI     " : 
                                          "UNKNOWN " ;
-                                           
 
+reg [63:0] 	inst_count = 0	 ;
+reg [63:0] 	clk_count = 0	 ;
+                                      
+
 always @*
     begin
     
@@ -257,10 +260,11 @@
     if ( execute_now )
         begin
         
+	    clk_count <= clk_count + 'd1;
             // Interrupts override instructions that are just starting
         if ( interrupt_d1 == 3'd0 || interrupt_d1 == 3'd7 )
             begin
-            $fwrite(decompile_file,"%09d  ", `U_TB.clk_count);
+            $fwrite(decompile_file,"%09d  ", clk_count);
             
             // Right justify the address
             if      ( execute_address < 32'h10)        $fwrite(decompile_file,"       %01x:  ", {execute_address[ 3:1], 1'd0});
@@ -278,7 +282,7 @@
                 begin
                 $fwrite(decompile_file,"-");
                 if ( itype == SWI )
-                    $display ("Cycle %09d  SWI not taken *************", `U_TB.clk_count);
+                    $display ("Cycle %09d  SWI not taken *************", clk_count);
                 end
             else     
                 $fwrite(decompile_file," ");
@@ -367,7 +371,7 @@
         // Undefined Instruction Interrupts    
         if ( i_instruction_execute && execute_undefined )
             begin
-            $fwrite( decompile_file,"%09d              interrupt undefined instruction", `U_TB.clk_count );
+            $fwrite( decompile_file,"%09d              interrupt undefined instruction", clk_count );
             $fwrite( decompile_file,", return addr " );
             $fwrite( decompile_file,"%08x\n",  pcf(get_reg_val(5'd21)-4'd4) );
             end
@@ -375,7 +379,7 @@
         // Software Interrupt  
         if ( i_instruction_execute && itype == SWI )    
             begin
-            $fwrite( decompile_file,"%09d              interrupt swi", `U_TB.clk_count );
+            $fwrite( decompile_file,"%09d              interrupt swi", clk_count );
             $fwrite( decompile_file,", return addr " );
             $fwrite( decompile_file,"%08x\n",  pcf(get_reg_val(5'd21)-4'd4) );
             end
@@ -390,7 +394,7 @@
         // Asynchronous Interrupts    
         if ( interrupt_d1 != 3'd0 && i_interrupt_state )
             begin
-            $fwrite( decompile_file,"%09d              interrupt ", `U_TB.clk_count );
+            $fwrite( decompile_file,"%09d              interrupt ", clk_count );
             case ( interrupt_d1 )
                 3'd1:    $fwrite( decompile_file,"data abort" );
                 3'd2:    $fwrite( decompile_file,"firq" );
@@ -428,7 +432,7 @@
              execute_address != get_32bit_signal(0)  // Don't print jump to same address
              )
             begin
-            $fwrite(decompile_file,"%09d              jump    from ", `U_TB.clk_count);
+            $fwrite(decompile_file,"%09d              jump    from ", clk_count);
             fwrite_hex_drop_zeros(decompile_file,  pcf(execute_address));
             $fwrite(decompile_file," to ");
             fwrite_hex_drop_zeros(decompile_file,  pcf(get_32bit_signal(0)) ); // u_execute.pc_nxt
@@ -448,7 +452,7 @@
     if ( get_1bit_signal(0) && !get_1bit_signal(1) )
         begin
         
-        $fwrite(decompile_file, "%09d              write   addr ", `U_TB.clk_count);
+        $fwrite(decompile_file, "%09d              write   addr ", clk_count);
         tmp_address = get_32bit_signal(2);
         fwrite_hex_drop_zeros(decompile_file, {tmp_address [31:2], 2'd0} );
                   
@@ -466,7 +470,7 @@
     else if (get_1bit_signal(3) && !get_1bit_signal(0)  && !get_1bit_signal(1))     
         begin
         
-        $fwrite(decompile_file, "%09d              read    addr ", `U_TB.clk_count);
+        $fwrite(decompile_file, "%09d              read    addr ", clk_count);
         tmp_address = get_32bit_signal(2);
         fwrite_hex_drop_zeros(decompile_file, {tmp_address[31:2], 2'd0} );    
                      
